<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bPersonal.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAABMdJREFUaEPtWVuIHEUUnSi+HyCi4FvRDyUqQhAVlEgy3TPEJfoTBFFRkfijiKIG
        Qemt7k1EZNH4oUaCGiIRB0x2ump23QQRon6oUVDQEPCBD0QNCiagSUwyntt7Vmd6+jXdPdkV5sChd+/c
        e+vcenVNTWWIIYYYLGrO1IW1UXOH7ZpVlmuexXPccvXjVeUvXeE0jqXb/ITjOEfZo/7dEPwFhLcT+J3t
        tkYY9i+Wrtl8ek2Zmy1lnrCVeQ5+47ZnHqh7kxfTZfCor548AwI+DAlOoP4bYt+ounqZ7W05D/9vwsjt
        j/KF/ZCl9POL1u04hs0NBjc9ZU6zlf48SkQ2oih5Kn0AxU1D9BgKfNBS/sMo4mV00O/yOZ574POqFM6m
        y0WQvEtYDirzc21s6iym7ELdmTwXbXzZ4b+75jYX8uNyIIsaPXWwo5HclI2AaSNhO81LsP62Bv5Kf1pp
        txfwo+LA0D8aFpSfehPTxuLa8cYJMnriX1P6BpqLAz000SsoJ5X5kWkTIQtf/KUTaSoODHGBRR6i0oez
        vGMsz9w3E6PX01QcGd4ZfVF2QKaOhbyrxBdrcwNNxVHqiICLncbJTB0L2ZrFF4W8QFNxYJ5+EhaTl/K+
        YNpEYEqtZcwqmooDC+/NTjEFuYNpE4HO+0j8a56+kabiwBp5MiQmP5XeyLSxWP70xCnBSQCngBHHP5Hm
        4rBd/5ZIUfm4kmljYXmtJeKLmbBP3vg0FwdOsbeFxBSgvpNpEyG7VeCP3Yum4kDPfNArKC/1+0ybiNl1
        ibVyO03FgWQ7ewXlJA6GTBsLFDGGE8Cfcr6rOv75NBcHBGzuEZSTEPkW00YCa+JUeftLESjGpbkcYDrc
        EyUqDzG6dzFtJPAiXB74KT1FU3mQs5HM7bCofokitqedszAKLfo+RFO5qK+dPG72aJ2LiE0tYtS/lf57
        LWf6TJrLB+Zu/m+JiGWaWMjxhb730zQY1JR/XY/AjKx6/vVMEwtM31/EVy45aBoccFwxYZFpRE9vY3gi
        4Pd9EDOoi4dOVJ2Js9HY7k6hSYS4PfKdn+GJwE71lcRUXXMZTYMFxPVzt7WLYamA/9sSg/xb5Hs7zYMD
        tsbPusUmUJlvGJaKutO8UkZwJlbvkjOe7Jb8uHzMNBISHEOsqR8YlgmIWdR9JMIGoMyaZZ65gC7lYObq
        0+z9r6E06r8sr3kRwzNBrk3lBIBt+OPZPBipg7C9bjv+pXTLD1mESN7393e5vLAcfTnT9AUUcA3a3Igi
        gjtjKQjP8Vy3/VW3dQUSvYJdZV+nwH4oQiBig+WYq5i2L8gpGAW9xELkpflOpg0h+PnAbY2gN7ci6HBY
        WCFChPy0sKLROJrNZYZcuQbrBnmkc2nuhVzVYHE9AsevuxofANFJ32KUH5OjO5vPhLryr0ZnHJAOlr9p
        JtrtBZhC985WeySJYn6Vm8V+LqwR91oQ65oXacKCemb6JIxCszP5XBAFaTxXZqNej6cUsjMogjff74nx
        f0lMsaAQVCQ/YkY7zRExMj/huS4rK/IDJAo5hH8iE84VoWn/kjF9TtDTWSCv/qhE84SrKTMdGMIS76tK
        Jo4nlJkO7OO/RSaZB4S2PygzHVEJ5hMXO+8eT6lDDHHkUan8AwmYqP0LqBp8AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>81</value>
  </metadata>
</root>